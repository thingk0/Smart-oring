plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'samsung.smart'
version = '0.0.1'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring-Mvc
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Spring Kafka 의존성
    implementation 'org.springframework.kafka:spring-kafka'
    // Kafka 클라이언트 의존성
    implementation 'org.apache.kafka:kafka-clients'
    // Jackson 의존성, 객체를 JSON으로 직렬화하기 위해 필요
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    // Configuration-Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // spring cloud config
    implementation 'org.springframework.cloud:spring-cloud-starter-config:4.1.1'
    // spring actuators
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

}

tasks.named('test') {
    useJUnitPlatform()
}
